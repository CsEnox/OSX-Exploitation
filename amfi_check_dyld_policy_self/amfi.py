
AMFI_DYLD_OUTPUT_ALLOW_AT_PATH = (1 << 0)
AMFI_DYLD_OUTPUT_ALLOW_PATH_VARS = (1 << 1)
AMFI_DYLD_OUTPUT_ALLOW_CUSTOM_SHARED_CACHE = (1 << 2)
AMFI_DYLD_OUTPUT_ALLOW_FALLBACK_PATHS = (1 << 3)
AMFI_DYLD_OUTPUT_ALLOW_PRINT_VARS = (1 << 4)
AMFI_DYLD_OUTPUT_ALLOW_FAILED_LIBRARY_INSERTION = (1 << 5)
AMFI_DYLD_OUTPUT_ALLOW_LIBRARY_INTERPOSING = (1 << 6)

amfiOutputFlags = 0x5f

flags_dict = {
    AMFI_DYLD_OUTPUT_ALLOW_AT_PATH: "AMFI_DYLD_OUTPUT_ALLOW_AT_PATH",
    AMFI_DYLD_OUTPUT_ALLOW_PATH_VARS: "AMFI_DYLD_OUTPUT_ALLOW_PATH_VARS",
    AMFI_DYLD_OUTPUT_ALLOW_CUSTOM_SHARED_CACHE: "AMFI_DYLD_OUTPUT_ALLOW_CUSTOM_SHARED_CACHE",
    AMFI_DYLD_OUTPUT_ALLOW_FALLBACK_PATHS: "AMFI_DYLD_OUTPUT_ALLOW_FALLBACK_PATHS",
    AMFI_DYLD_OUTPUT_ALLOW_PRINT_VARS: "AMFI_DYLD_OUTPUT_ALLOW_PRINT_VARS",
    AMFI_DYLD_OUTPUT_ALLOW_FAILED_LIBRARY_INSERTION: "AMFI_DYLD_OUTPUT_ALLOW_FAILED_LIBRARY_INSERTION",
    AMFI_DYLD_OUTPUT_ALLOW_LIBRARY_INTERPOSING: "AMFI_DYLD_OUTPUT_ALLOW_LIBRARY_INTERPOSING"
}

for flag_value, flag_description in flags_dict.items():
    is_enabled = amfiOutputFlags & flag_value
    status = "Enabled" if is_enabled else "Disabled"
    print(f"{flag_description}: {status}")

